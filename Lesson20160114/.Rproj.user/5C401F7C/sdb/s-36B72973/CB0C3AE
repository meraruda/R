{
    "contents" : "# R, RStudio簡介: 安裝、操作介面、特色\n\n# R語言簡介         網址: https://zh.wikipedia.org/wiki/R%E8%AF%AD%E8%A8%80\n# R語言相關資料     網址：https://www.r-project.org/\n# 第一步安裝R       網址：https://cran.r-project.org/mirrors.html\n# 第二步安裝RStudio 網址：https://www.rstudio.com/\n\n# 安裝完以後就可以開始寫R程式\n\n\n# 條件: if, ifelse, for, while\n\n# ← 註解就是井字號，基本上用起來習慣跟Linux相似\n\n# 基本變數宣告======================================================================|\n# R語言可以用指派(Assignment)運算式「<-」\n# 也可以運用「=」來給予一個變數值\n\nx = 3.0             # Double\nx = 3.0 ^ 2\nx = sqrt(16)\n\n# 變數的變化與替換可以從右上角的變數狀態欄觀察\n# 另外物件中的元素包含四種基本資料型態\n# 數值(Numeric)\n# 文字(Character)\n# 複數(Complex) can't not be divide\n# 邏輯(Logical) boolean\n\nsome.name = \"Taipei Beitou\"  # 宣告為字元\nsome.name\n\ndecision = TRUE     # 也可寫成 decision = T \nif (decision) x = 3 # decision 變數可跟 if 搭配\n\ncomp = 15 + 22.3i   # 複數\n\nls.str()            # 觀看目前所有物件之資料型態\nmode(x)             # 查看物件的型態\nmode(decision)\nmode(comp)\n\n# ==================================================================================|\n# ===================================變數種類=======================================|\n# ==================================================================================|\n# ==========變數: vector、matrix、data-frame、list、factor (array)==================|\n# ==================================================================================|\n\n# 向量(vector)  <- 儲存單一變數的觀察值=============================================|\n# 使用c()函數來建立\nV = c(10, 5, 3.1, 6.4, 9.2, 21.7)\nV\n\n# 也可以使用assign()函數達到同樣的效果\nassign(\"V\", c(10, 5, 3.1, 6.4, 9.2, 21.7))\nassign(\"V\", c(10, \"5\", \"3.1\", 6.4, \"9.2\", \"21.7\"))\nV\nlength(V)\nmode(V) # 查看物件的型態\n\n# 中括弧用於存取向量中的特定元素\nv[2]\n\n# 要建立連續型的向量可以使用\nV2 = 1:10\nV2\n\n# 陣列(array)   <- 多為矩陣計算或儲存表格內容=======================================|\nX = 1:24 # 這是陣列\ndim(X) = c(3, 4, 2) # 指定陣列維度\nX\n\ndim(X) = c(4, 6) # 指定陣列維度\nX\n\n# 另外也可以透過array直接建立\nX = array(1:24, dim = c(3, 4, 2))\nX\n\nX = array(0, dim = c(4, 6)) #可以建立都是0的矩陣\nmode(X)\n\n# 矩陣(matrix)  <- 用於矩陣計算，例如設計矩陣=======================================|\n# 資料框架與矩陣皆為二維\nY = matrix(\n  data = 1:24, nrow = 4, ncol = 6, byrow = F, dimnames = NULL\n) # 按列\nY = matrix(\n  data = 1:24, nrow = 4, ncol = 6, byrow = T, dimnames = NULL\n) # 按行\nnrow(Y)\nncol(Y)\nY[1,] # 第一列元素觀看\nY[,2] # 第二行元素觀看\n\n# data-frame    <- 儲存整個資料檔的內容=============================================|\nid  = c(1,2,3,4)\nage = c(25,30,35,40)\nsex = c(\"Male\", \"Male\", \"Female\", \"Female\")\npay = c(30000, 40000, 45000, 50000)\nx_table = data.frame(id, age, sex, pay)\nx_table\nx_table[3,3]\nx_table[2]\nedit(x_table)\n\nweight = c(150, 135, 210, 140)\nheight = c(65, 61, 70, 65)\ngender = c(\"Fe\",\"Fe\",\"M\",\"Fe\")\nstudy = data.frame(weight,height,gender) # make the data frame\nstudy\nstudy = data.frame(w=weight,h=height,g=gender)\nrow.names(study)<-c(\"Mary\",\"Alice\",\"Bob\",\"Judy\")\nstudy\n\n# 因子(factor)  ← 儲存\"類別變數\"的內容=============================================|\n\n# 列表組成的元素可以是異質(heterogeneous)物件\nxxx = factor(c(\"蔡\",\"馬\",\"宋\"))\n\nid = c(1,2,3)\nsex = c(\"Female\", \"Male\", \"Male\")\nballot = c(6093578, 6891139, 369588)\nxxx.dataframe = data.frame(id, sex, ballot)\n\n# 串列(list)    ← 資料庫或用於函數的傳回值=========================================|\nfactor_table = list(name = \"Taiwan\", vote_rate = \"74.38%\", xxx.dataframe, xxx)\n\nfactor_table[1]\nfactor_table[2]\nfactor_table[3]\nfactor_table[[3]][1]\nfactor_table[[3]][2]\nfactor_table[[3]][3]\nfactor_table[4]\nfactor_table[[4]][1]\n\n# ==================================================================================|\n# ===================================== 條件 =======================================|\n# ==================================================================================|\n# =========== 條件及函數：if , ifelse, for, while, function, switch ================|\n\n# R的條件語法 if (condition) expr#1 else expr#2\n# 或是        if (condition) expr#1\n# 上述 condition 表示為判斷式，必須傳回一個布林值(TRUE或FALSE)\n# 可用 &&(AND) 與 ||(OR) 等常用於判斷式的條件控制\n\n# example - one\nx = 6\nif (x > 5) y = 2 else y = 4\ny\n\n# example - two\nX = 3\nif (X < 5) Y = 10\nY\n\n# example - three\nx = 3\ny = 1\nif (x < 5 && y < 5) {\n  y = 10\n  z = 5\n}\ny\nz\n\n# 另外可使用ifelse()函數來做為一個二分類的判斷\n# 若condition判斷為TRUE時傳回a，否則傳回b\n# ifelse(condition, a, b)\nx = 20\ny = ifelse(x > 5,2,3)\ny\n\n# switch()函數功能==================================================================|\n# switch(condition, expr#1, ..., expr#m)\nY=1\nswitch(Y, one=\"朱立倫\", two=\"蔡英文\", three=\"宋楚瑜\")\nY=\"two\"\nswitch(Y, one=\"朱立倫\", two=\"蔡英文\", three=\"宋楚瑜\")\nY=\"宋楚瑜\"       \nswitch(Y, one=\"朱立倫\", two=\"蔡英文\", three=\"宋楚瑜\")\n# 沒有結果\n\n# for()函數功能=====================================================================|\nx=0\ny=0\nfor(i in 1:5){ x=x+i; y=i^2 }\nx\ny\n\n# while()函數功能===================================================================|\nsum =0\ni=1\nwhile(i<=10){sum=sum+i ; i=i+1}\nsum\n\n# function 自訂函數=================================================================|\nArea_of_a_disk = function(x){\n y = pi*(x^2)\n return(y)\n}\n\nArea_of_a_disk(8)\n\nfor(i in 1:100){\n  cat(\"半徑為\", i, \"時的圓面積 =\", Area_of_a_disk(i), \"\\n\")\n  }\n\n\n\n\n\n\n\n\n",
    "created" : 1452769736622.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "897297701",
    "id" : "CB0C3AE",
    "lastKnownWriteTime" : 1452769859,
    "path" : "~/R_Code/Lesson20160114/20160114_teaching_1.R",
    "project_path" : "20160114_teaching_1.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}