{
    "contents" : "options(java.parameters = \"-Xmx4g\", stringsAsFactors=F)\nlibrary(XLConnect);library(data.table);library(plyr); library(dplyr);library(devtools)\nlibrary(ggplot2)\n\n## =========== 1. R and RStudio install ===========\n## web link: \n## R(version R-3.2.3) : http://ftp.yzu.edu.tw/CRAN/  \n## Rstudio : https://www.rstudio.com/products/rstudio/download/\\\n## Notice : \n## 要先安裝R 再安裝Rstudio，Rstudio將連結該版本的R\n## 若需變更R的版本連結，可由上方的 \"Tools => Global Options => R General (R version)\"變更\n## 一般安裝位置會在 C:\\Program Files 底下\n## =========== 1.1 參數設定 ===========\n## options(java.parameters = \"-Xmx16g\", stringsAsFactors=F)\n## 每次執行 R 都需要先執行上述參數，java.parameters 請依據本身電腦的MEM 填入上限，一般default 為 2g MEM\n## stringAsFactors = F 因為預設將文字向量轉換成 factor 變數，這指令將停止此預設\n\n## =========== 1.2 套件安裝及呼叫 ===========\n## 安裝 :\n## 如需要安裝新的套件，請點選Rstusio 右下方的 packages並點選 install 接著輸入欲安裝的套件\n## example : data.table，接著點選 install，即完成安裝，R 將自動連結到 R 的library 進行安裝\n## Notice : \n## 如欲安裝的套件無法安裝，也可直接在網路上抓取該套件的壓縮檔，解壓縮後放置到 \"C:\\Program Files\\R\\R-3.2.2\\library\"\n## 抑或，可以直接下指令使用網址安裝，如下:\n## install.packages(\"dplyr\", repos = \"http://mran.revolutionanalytics.com\")\n## 呼叫 :\n## 安裝完成後，仍需下 'library(dplyr)' 或是 'library(\"dplyr\")'指令才能使用\n##\n\n## =========== 1.3 常用環境指令 ===========\n## getwd()             : 查詢目前工作目錄\n## setwd(欲變更的目錄) : 改變工作目錄\n## rm(物件名稱)        : 刪除該物件，一般會與gc()使用，如rm(Raw.Data);gc()即刪除該物件並釋放MEM\n## memory.size()       : 查詢R 目前所使用的MEM大小(單位 : MB)\n## memory.limit()      : R 所可使用的最大MEM上限 (單位 : MB)，也可用於設定MEM上限，但只能增加不能減少\n## options(digits = 3) : 用來設定數字的顯示位數，一般設定為五位數字，如此例為變更R 可允許的位數 5+3 \n## options(scipen=999) : 直接阻止任何科學計數\n## help(函數), ??函數  : 查詢函數的定義或範例\n## demo(套件名稱)      : 展示某套件的示範功能\n## example(函數名稱))  : 執行函數中的範例程式\n## class               : 物件類別\n## str                 : 物件結構\n## attr                : 查詢物件特定屬性值\n\n## =========== 2. R 常用變數 ===========\n## 變數 : vector, matrix, data.frame, factor, list\n## =========== 2.1 vector ===========\n## 元素屬性皆相同 : 皆為數字或文字或邏輯值\n## 向量聯集       : 可用c()結合兩個向量變數\n## 刪除元素       : 使用負號刪除該向量中的任意變數\n## 向量沒有維度   : 可以轉換為matrix 後即可使用維度，抑或用length計算向量內的數量\n\n## example :\nNames = c('John', 'Tim', 'Teddy', 'Howard')\nNames[1]\n# [1] \"John\"\nlength(Names)\n# [1] 4\nNumber = c(12,23,52,39,1)\nNumber\n# [1] 12 23 52 39  1\nNumber[1]\n# [1] 12\nNumber[-2] # 刪除第二項\n# [1] 12 52 39  1\nNumber[6] = 100 # 新增第六項 \nNumber\n# [1]  12  23  52  39   1 100\nlength(Number)\n# [1] 6\ndim(Number) # 沒有維度資訊\n# NULL\ndim(matrix(Number)) # 轉換成矩陣變數\n# [1] 6 1\ny1 = c(1,2,3);y2 = c(2,4,6);y3 = c(3,5,9)\ny = c(y1,y2,y3)\ny\n# [1] 1 2 3 2 4 6 3 5 9\nz = c(1:5)\nz\n# [1] 1 2 3 4 5\nseq(1, 5) # 內建函數 seq\n# [1] 1 2 3 4 5\nseq(1, 5, by=2) # 運用 by 參數，設定各項差距\n# [1] 1 3 5\nrep(1, 3) # 內建函數 rep\n# [1] 1 1 1\nrep(1:3, times = 2) # 重複兩次\n# [1] 1 2 3 1 2 3 \nrep(1:3, each = 2) # 重複兩次\n# [1] 1 1 2 2 3 3\n\n## =========== 2.2 matrix ===========\n## 元素屬性皆相同 : 皆為數字或文字或邏輯值\n## 矩陣聯集       : 可用cbind() or rbind() 結合兩個矩陣變數 或是向量變數\n\n## example : \nx.m <- matrix(1:9)\nx.m\n#       [,1]\n# [1,]    1\n# [2,]    2\n# [3,]    3\n# [4,]    4\n# [5,]    5\n# [6,]    6\n# [7,]    7\n# [8,]    8\n# [9,]    9\n\nt(x.m) # 轉置\n#       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n# [1,]    1    2    3    4    5    6    7    8    9\nx.m = matrix(1:9, ncol = 3) # 設定col 數為3\nx.m\n#       [,1] [,2] [,3]\n# [1,]    1    4    7\n# [2,]    2    5    8\n# [3,]    3    6    9\nx.m = matrix(1:6, nrow = 3) # 設定row 數為3\nx.m\n#       [,1] [,2]\n# [1,]    1    4\n# [2,]    2    5\n# [3,]    3    6\ndim(x.m) # 查詢dimension\n# [1] 3 2 第一數字為row 數，第二為 col數\nnrow(x.m);ncol(x.m) # 查詢row 數及 col數\n# [1] 3 ;[1] 2\nA = matrix(1:6, ncol=3);B = matrix(11:13, nrow =3)\nA%*%B #矩陣相乘\n#     [,1]\n# [1,]  112\n# [2,]  148\ndiag(matrix(1:9, ncol=3)) # 對角線函數\n# [1] 1 5 9\n\ndet(matrix(1:4, ncol=2)) # 計算determinant\n# [1] -2\n\nsolve(matrix(1:4, ncol=2)) # 回傳反矩陣，用於解聯立線性方程式\n#      [,1] [,2]\n# [1,]   -2  1.5\n# [2,]    1 -0.5\n\neigen(matrix(1:4, ncol=2)) # 計算特徵值及特徵向量\n# $values\n# [1]  5.372 -0.372\n# \n# $vectors\n#       [,1]   [,2]\n# [1,] -0.566 -0.909\n# [2,] -0.825  0.416\n\nA = matrix(1:6, ncol=3);B = matrix(11:13, nrow =1)\nrbind(A, B)\n#      [,1] [,2] [,3]\n# [1,]    1    3    5\n# [2,]    2    4    6\n# [3,]   11   12   13\n\ncbind(t(A), t(B))\n#      [,1] [,2] [,3]\n# [1,]    1    2   11\n# [2,]    3    4   12\n# [3,]    5    6   13\n\ncolnames(A) = c(paste('col', 1:3,sep = '')) # 設定col名稱\nrownames(A) = c(LETTERS[1:2]) # 設定row名稱;letters and LETTERS\nA\n#    col1 col2 col3\n# A    1    3    5\n# B    2    4    6\n\nA[1, ] # 選擇第一個row\n# col1 col2 col3 \n# 1    3    5 \nA[, 1] # 選擇第一個col\n# A B \n# 1 2 \n\nA[2,3] = 2;A # 變更矩陣中的 (2,3) 為 2\n#   col1 col2 col3\n# A    1    3    5\n# B    2    4    2\n\n## =========== 2.3 data.frame ===========\n## 元素屬性可不相同 : 可為數字或文字或邏輯值，介於Matrix 與List 間的變數\n## 矩陣聯集         : 可用cbind() or rbind() 結合\n## '$' 符號         : 可運用'$'符號指定某直行，與matrix的X[, 1]類似\n\n## example : \n## 一般使用 'read.table'指令讀入資料皆為 data.frame 變數\ndata <- read.table('D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/www_asus_115061.esw3ccust_U.201511081800-2400-15.gz'\n                   , sep = '\\t')\nhead(data) #\n# V1       V2             V3   V4\n# 1 2015-11-07 14:53:47 95.165.136.170  GET\n# 2 2015-11-07 14:53:49 95.165.136.170  GET\n# 3 2015-11-07 14:53:49  46.133.177.64  GET\n# 4 2015-11-07 14:53:51   84.21.34.167  GET\n# 5 2015-11-07 14:53:52 95.165.136.170 POST\n# 6 2015-11-07 14:53:53 95.165.136.170  GET\n# V5  V6    V7   V8\n# 1 /www.asus.com/ru/GetData.asmx/getProduct_Information_xml?ProductHashedId=V9YR0jtmbN4rzyj4 200  1243    0\n# 2                                 /www.asus.com/websites/rich_overview/css/rich_oveview.css 200  1258    1\n# 3                                  /www.asus.com/ru/Motherboard-Accessories/ROG_Front_Base/ 200 43169 1978\n# 4                                   /www.asus.com/websites/global/images/icons/Gbit_lan.gif 304   199    0\n# 5                                                  /www.asus.com/ru/member.asmx/checkMember 200   413    0\n# 6         /www.asus.com/ru/GetData.asmx/getProductSpecByHashedid?param=V9YR0jtmbN4rzyj4,1,0 200   314    0\n# V9\n# 1 http://www.asus.com/RU/Motherboards/B85ME/?SearchKey=b85m-e/\n#   2 http://www.asus.com/RU/Motherboards/B85ME/?SearchKey=b85m-e/\n#   3                                   https://www.google.com.ua/\n#   4                                                            -\n#   5 http://www.asus.com/RU/Motherboards/B85ME/?SearchKey=b85m-e/\n#   6 http://www.asus.com/RU/Motherboards/B85ME/?SearchKey=b85m-e/\n#   V10\n# 1                                     Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\n# 2                                     Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\n# 3 Mozilla/5.0 (Linux; Android 5.0.1; GT-I9500 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.133 Mobile Safari/537.36\n# 4                                                                                                                  Mozilla/4.0 (compatible;)\n# 5                                     Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\n# 6                                     Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\n# V11 V12\n# 1   -  RU\n# 2   -  RU\n# 3   -  UA\n# 4   -  DE\n# 5   -  RU\n# 6   -  RU\n## 建立變數 col.names 為欄位名稱\ncol.names <- c('date','time','cs-ip','cs-method','cs-uri','sc-status','sc-bytes','time-taken','cs(Referer)','cs(User-Agent)','cs(Cookie)','x-custom')\ncolnames(data) <- col.names\nhead(data)\n# date     time          cs-ip cs-method\n# 1 2015-11-07 14:53:47 95.165.136.170       GET\n# 2 2015-11-07 14:53:49 95.165.136.170       GET\n# 3 2015-11-07 14:53:49  46.133.177.64       GET\n# 4 2015-11-07 14:53:51   84.21.34.167       GET\n# 5 2015-11-07 14:53:52 95.165.136.170      POST\n# 6 2015-11-07 14:53:53 95.165.136.170       GET\n# cs-uri sc-status sc-bytes\n# 1 /www.asus.com/ru/GetData.asmx/getProduct_Information_xml?ProductHashedId=V9YR0jtmbN4rzyj4       200     1243\n# 2                                 /www.asus.com/websites/rich_overview/css/rich_oveview.css       200     1258\n# 3                                  /www.asus.com/ru/Motherboard-Accessories/ROG_Front_Base/       200    43169\n# 4                                   /www.asus.com/websites/global/images/icons/Gbit_lan.gif       304      199\n# 5                                                  /www.asus.com/ru/member.asmx/checkMember       200      413\n# 6         /www.asus.com/ru/GetData.asmx/getProductSpecByHashedid?param=V9YR0jtmbN4rzyj4,1,0       200      314\n# time-taken                                                  cs(Referer)\n# 1          0 http://www.asus.com/RU/Motherboards/B85ME/?SearchKey=b85m-e/\n#   2          1 http://www.asus.com/RU/Motherboards/B85ME/?SearchKey=b85m-e/\n#   3       1978                                   https://www.google.com.ua/\n#   4          0                                                            -\n#   5          0 http://www.asus.com/RU/Motherboards/B85ME/?SearchKey=b85m-e/\n#   6          0 http://www.asus.com/RU/Motherboards/B85ME/?SearchKey=b85m-e/\n#   cs(User-Agent)\n# 1                                     Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\n# 2                                     Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\n# 3 Mozilla/5.0 (Linux; Android 5.0.1; GT-I9500 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.133 Mobile Safari/537.36\n# 4                                                                                                                  Mozilla/4.0 (compatible;)\n# 5                                     Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\n# 6                                     Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\n# cs(Cookie) x-custom\n# 1          -       RU\n# 2          -       RU\n# 3          -       UA\n# 4          -       DE\n# 5          -       RU\n# 6          -       RU\n\nhead(data['time']);head(data[2]) # 兩者皆為data.frame 變數\n# time\n# 1 14:53:47\n# 2 14:53:49\n# 3 14:53:49\n# 4 14:53:51\n# 5 14:53:52\n# 6 14:53:53\n# time\n# 1 14:53:47\n# 2 14:53:49\n# 3 14:53:49\n# 4 14:53:51\n# 5 14:53:52\n# 6 14:53:53\nhead(data[, 'time']); head(data$time);head(data[, 2]) # 三者皆為 vector 變數\n# [1] \"14:53:47\" \"14:53:49\" \"14:53:49\" \"14:53:51\" \"14:53:52\" \"14:53:53\"\n# [1] \"14:53:47\" \"14:53:49\" \"14:53:49\" \"14:53:51\" \"14:53:52\" \"14:53:53\"\n# [1] \"14:53:47\" \"14:53:49\" \"14:53:49\" \"14:53:51\" \"14:53:52\" \"14:53:53\"\n\nx = data.frame()\nx = edit(x)\nx\n#   身高 體重 性別\n# 1  164   47    F\n# 2  145   56    F\n# 3  187   60    M\n# 4  175   74    F\nfix(x)\nx\n#   身高 體重 性別\n# 1  164   47    F\n# 2  145   56    F\n# 3  187   74    M\n# 4  175   74    F\n\n## 直接剪貼使用 excel or csv 的資料\n# readClipboard 無法區分不同欄位且無法定義欄位名稱\nx <- readClipboard()\nx\n# [1] \"date\"            \"time\"            \"s-ip\"            \"cs-method\"       \"cs-uri-stem\"     \"cs-uri-query\"   \n# [7] \"s-port\"          \"cs-username\"     \"c-ip\"            \"cs(User-Agent)\"  \"cs(Referer)\"     \"cs-host\"        \n# [13] \"sc-status\"       \"sc-substatus\"    \"sc-win32-status\" \"sc-bytes\"        \"cs-bytes\"        \"time-taken\" \n\ny <- readClipboard()\ny\n# [1] \"win32_status\\tfreq\\t%\" \"0\\t83062951\\t73.39%\"   \"1\\t13632063\\t12.04%\"   \"2\\t10377075\\t9.17%\"   \n# [5] \"3\\t6113561\\t5.40%\" \n\n# read.table(file = \"clipboard\", sep = \"\\t\", header = T) 可以區分不同欄位並定義欄位名稱\nx <- read.table(file = \"clipboard\", sep = \"\\t\", header = T)\nx\n#   win32_status     freq     X.\n# 1            0 83062951 73.39%\n# 2            1 13632063 12.04%\n# 3            2 10377075  9.17%\n# 4            3  6113561  5.40%\n\n## =========== 2.4 factor ===========\n## 元素屬性相同 : 可為數字或文字或邏輯值\n## 有序因子     : 可使用 'ordered' 指令給予變數順序\n## 分類變數     : 可提供資料的類別\n\nx = c('Yes', 'No', 'Yes', 'Yes', 'No')\nx\n# [1] \"Yes\" \"No\"  \"Yes\" \"Yes\" \"No\"\nas.factor(x)\n# [1] Yes No  Yes Yes No \n# Levels: No Yes # 定義類別，依據字母順序排列，也可重新定義類別\nfactor(x, levels = c('Yes', 'No'))\n# [1] Yes No  Yes Yes No \n# Levels: Yes No # 重新定義類別\n\n## 有序因子變數\nx = c('D','E','G','A','C','F','B')\nx\n# [1] \"D\" \"E\" \"G\" \"A\" \"C\" \"F\" \"B\"\nas.factor(x)\n# [1] D E G A C F B\n# Levels: A B C D E F G\n\nx1 = ordered(x, levels=c('G','F','E','D','C','B','A'));x1 # 給予分類順序，由小到大\n# [1] D E G A C F B\n# Levels: G < F < E < D < C < B < A\nx1 >='C'\n# [1] FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE\nx1[x1 >='C']\n# [1] A C B\n# Levels: G < F < E < D < C < B < A\nx1[which(x1 >= 'C')]\n# [1] A C B\n# Levels: G < F < E < D < C < B < A\n\n## =========== 2.5 list ===========\n## 元素屬性可不相同 : 可為數字或文字或邏輯值\n## 可不同長度       : 可接受不同長度的數字、文字、向量、矩陣\n## 變數中彈性最大   : 可接受不同變數以及不同長度，也可給予名稱\n\nx1 = 11:15;x2 = 23:31;x3 = 1:10\nx = list(x1, x2, x3) \n# [[1]]\n# [1] 11 12 13 14 15\n# \n# [[2]]\n# [1] 23 24 25 26 27 28 29 30 31\n# \n# [[3]]\n# [1]  1  2  3  4  5  6  7  8  9 10\n\n# 因為尚未給予名稱，所以僅能使用雙括號做選取 \nx[[1]]\n# [1] 11 12 13 14 15\nx[[1]][2]\n# [1] 12\n\nx = list(X1 = x1, ages = x2, '數字' = x3) \n# $X1\n# [1] 11 12 13 14 15\n# \n# $ages\n# [1] 23 24 25 26 27 28 29 30 31\n# \n# $數字\n# [1]  1  2  3  4  5  6  7  8  9 10\n\nx[1];x[[1]];x$X1;x[['X1']] # x[1] 回傳一個list 變數，其他皆回傳 vector\n# $X1\n# [1] 11 12 13 14 15\n# \n# [1] 11 12 13 14 15\n# [1] 11 12 13 14 15\n# [1] 11 12 13 14 15\n\nx$X1[1] # 可以使用向量的方式選取\n# [1] 11\n\n## 可以使用rbind 指令合併\nL1 = list(nickname = 'Teddy', age = 25)\nL2 = list(name = 'Ted', age = 30)\nL = rbind(L1, L2);L\n#   nickname age\n# L1 \"Teddy\"  25 \n# L2 \"Ted\"    30 \n# 合併後，可選擇row\nL[1, ]\n# $nickname\n# [1] \"Teddy\"\n# \n# $age\n# [1] 25\n\n## =========== 3. 判斷式、迴圈及自建函數 ===========\n## 判斷式   : if else, ifelse, elseif, switch\n## 邏輯判斷寫法 : >, <, <=, >=, ==, !=, A%in%B, &, |,!\n## 迴圈     : for, while, repeat, break, next\n## 自建函數 : function\n## =========== 3.1 判斷式 ===========\n##邏輯判斷示範例\n1 > 3;1 < 3; 1 <= 3;1 >= 3; 1 == 3;1 != 3;c(1:3) %in% c(1:5); 1 > 0 & 3 > 1;1 > 0 | 1 > 1;!(1 > 3) \n# [1] FALSE\n# [1] TRUE\n# [1] TRUE\n# [1] FALSE\n# [1] FALSE\n# [1] TRUE\n# [1] TRUE TRUE TRUE\n# [1] TRUE\n# [1] TRUE\n# [1] TRUE\n\n## if else\nx = 3\nif (x > 1) y = 2 else y = 5\ny\n# [1] 2\n## ifelse\nx = 3\ny = ifelse(x > 1, 2, 5);y\n# [1] 2\n\n## if elseif else\nx = 20\nif (x < 5) {\n  y = 1\n  z = 10\n  } else if (x > 100) {\n  y = 3\n  z = 30\n  } else {\n  y = 2\n  z = 20\n  }\nc(y, z)\n# [1]  2 20\n\n## switch \nx = 3\nswitch(x, 2+2, mean(1:10), rnorm(5,0,1)) # x = 3, 所以使用第三個函數\n# [1]  1.5878 -1.1304 -0.0803  0.1324  0.7080\ny = 't'\nswitch(y, t = mean(1:3), x = median(1:5), y = c(1:2)) # 也可以使用中文或文字選取函數\n# [1] 2\n\n## =========== 3.2 迴圈 ===========\n## for 較適用一般的迴圈，給予一定範圍後執行 \nfor (x in 1:10){\n  x = x +1\n  print(x)\n}\n# [1] 2\n# [1] 3\n# [1] 4\n# [1] 5\n# [1] 6\n# [1] 7\n# [1] 8\n# [1] 9\n# [1] 10\n# [1] 11\n\n# for 迴圈結合 break 指令，跳出迴圈\nfor (x in 1:10){\n  if (x > 5){\n    break\n  }\n  print(x)\n}\n# [1] 1\n# [1] 2\n# [1] 3\n# [1] 4\n# [1] 5\n\n# for 迴圈結合 next 指令，忽略該次迴圈並繼續執行其他的迴圈\nfor (x in 1:10){\n  if (x == 5){\n    next\n  }\n  print(x)\n}\n# [1] 1\n# [1] 2\n# [1] 3\n# [1] 4\n# [1] 6\n# [1] 7\n# [1] 8\n# [1] 9\n# [1] 10\n\n## while 需要設計停止點，一般較適用於數值逼近，例如 : 1/3 這種無窮數值使用泰勒展開式逼近，可以設定誤差值作為停止點\n## 與for 迴圈相似\nx = 0\nwhile (x <= 10){\n  x = x + 1\n  print(x)\n}\n# [1] 2\n# [1] 3\n# [1] 4\n# [1] 5\n# [1] 6\n# [1] 7\n# [1] 8\n# [1] 9\n# [1] 10\n# [1] 11\n\n## repeat 與 while 相似，同樣需要設計停止點，使用break or switch 跳出迴圈，一般適用於逼近\ni = 0\nrepeat\n{\n  if (i > 5) break\n  print(i)\n  i = i + 1\n}\n# [1] 0\n# [1] 1\n# [1] 2\n# [1] 3\n# [1] 4\n# [1] 5\n\n## =========== 3.3 自建函數 ===========\n## function 結合判斷式、迴圈、計算、資料整合、繪圖...etc \n## 可使用 return() 指令設定最後回傳值，若是未設定則 default 設定為最後一個運算式\n\n# 未設定參數的 default 值\nx.f <- function(x, y){\n  x + y\n}\nx.f(2,3)\n# [1] 5\n\n# function 結合 return()指令用法\nx.f <- function(x, y){\n  x + y\n  return(x)\n}\nx.f(2,3)\n# [1] 2\n\n# 設定參數的 default 值，可以修改任一參數值\nx.f <- function(x = 2, y = 3){\n  x + y\n}\nx.f()\n# [1] 5\nx.f(x = 3);x.f(y = 5)\n# [1] 6   ;[1] 7\n\n# 不給予參數\nhello.f <- function(){\n  cat('Hello World!! \\n')\n}\nhello.f()\n# Hello World!! \n\n# function call function\ncube.f <- function(x){\n  sq = function() x*x\n  #browser()\n  x*sq()\n}\ncube.f(3)\n# [1] 27\n\n# 運用'...'指令，將內建函數的所有參數作為function的參數\nplot.f <- function(x, y, ...){\n  plot(x, y, ...)\n}\nplot.f(1:5, seq(2, 10, by = 2), main = 'PLOT', xlab = 'x', ylab = 'y')\n\n# 遞迴函數\nf1.f <- function(x){\n  if (x > 0){\n    y = x - 1\n    return(x*f1.f(y))\n  } else {\n    return(1)\n  }\n}\nf1.f(3)\n# [1] 6 # 3*2*1*1\nf1.f(4)\n# [1] 24 # 4*3*2*1*1\n\n## =========== 4. 基本計算 ===========\n## =========== 4.1 簡單數字運算 ===========\n## '+', '-', '*', '/'\n## '%/%', '%%', '** or ^', 'sqrt'\n## 'sign()', 'abs()'\n## sin(), cos(), tan(), asin(), acos(), atan(), sinh(), cosh(), tanh(), asinh(), acosh(), atanh()\n\n1 + 4;1 - 4;1 * 4;1 / 4\n# [1] 5 ; -3, 4, 0.25\n1 %/% 2;1 %% 2\n# [1] 0, 1\n2**3;2^3;sqrt(2)\n# [1] 8 8 1.41\nabs(-3)\n# [1] 3\nsin(1)\n# [1] 0.841\n1.2e-5\n# [1] 0.000012\n\n## =========== 4.2 基本向量運算 ===========\n## length, sum, prod, cumsum, cumprod, sort, rank, rev\nx = c(1,3,2,7,4)\nlength(x) # 元素個數\n# [1] 5\nsum(x) # 向量所有元素加總\n# [1] 17\nprod(x) # 向量所有元素相乘，等同於階層函數\n# [1] 168\ncumsum(x) # 累加\n# [1]  1  4  6 13 17\ncumprod(x) #累乘\n# [1]   1   3   6  42 168\nsort(x) # 排序\n# [1] 1 2 3 4 7\nrank(x) # 排序後的排序位置，等同於 order\n# [1] 1 3 2 5 4\norder(x)\n# [1] 1 3 2 5 4\nrev(x)\n# [1] 4 7 2 3 1\n\n## =========== 4.3 基本統計運算 ===========\n## mean, var, sd, max, min, median\nx = c(1,3,2,7,4)\nmean(x) # 平均值\n# [1] 3.4 \nvar(x) # 變異數\n# [1] 5.3\nsd(x) # 標準差\n# [1] 2.3\nmax(x) # 最大值 \n# [1] 7\nmin(x) # 最小值\n# [1] 1\nmedian(x) # 中位數\n# [1] 3\n\n## =========== 5. 資料輸入與輸出 ===========\n## scan & write\n## read.table & write.table\n## read.csv & write.csv\n## Excel 輸入輸出將在套件 'XLConnect' 介紹說明\n## 特殊指令 : file.choose, list.files\n## =========== 5.1 scan & write ===========\n## 針對向量數值輸入\ndata <- scan(file = 'D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/Read.sample.txt'\n             , nlines = 10, skip = 10, na.strings = NA, encoding = 'UTF-8', sep = ',')\n\n# file      : 讀入的檔案路徑，注意 R 對於檔案路徑的斜線並非一般反斜線\n# nline     : 讀入的 row 數量\n# skip      : 跳過檔案最前端的 row 數\n# na.string : 對於遺失值的處理，一般預設為 'NA'\n# encoding  : 指定文字編碼\n# sep : 數值間的分隔符號\n\nwrite(t(matrix(data, ncol = 3, byrow = T)), 'D:/write.out.txt',ncolumns = 3, sep = ',')\n\n# 因為scan 讀入會成向量，先轉換成矩陣，並轉置(因為scan 預設是用 column by column 方式輸出)\n# ncolumn : 輸出的 col 數\n# sep     : 分隔符號\n\n## =========== 5.2 read.table & write.table ===========\n## 針對矩陣或是 data.frame 常用的輸入函數\ndata <- read.table(file = 'D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/Read.sample.txt'\n                   , nrows = 10, skip = 10, na.strings = NA, sep = ',', header = F)\n\n# file      : 讀入的檔案路徑，注意 R 對於檔案路徑的斜線並非一般反斜線\n# nrows     : 讀入的 row 數量\n# skip      : 跳過檔案最前端的 row 數\n# na.string : 對於遺失值的處理，一般預設為 'NA'\n# sep       : 數值間的分隔符號\n# header    : 檔案的第一列是變數名稱則設定為 T or TRUE，default 為 F(false)\n\nwrite.table(x = data, file = 'D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/write.out2.txt', na = 'NA', sep = ',')\n\n# x    : 輸出資料\n# file : 輸出檔案位置\n# na   : 表達遺失值\n# sep  : 數值間的分隔符號\n\n## =========== 5.3 read.csv & write.csv ===========\n## read.csv 與 read.table 相似，差異在 read.csv 預設以 ',' 分隔讀取\ndata <- read.csv(file = 'D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/Read.sample.txt'\n                   , nrows = 10, skip = 10, na.strings = NA, sep = ',', header = F)\nwrite.csv(x = data, file = 'D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/write.out3.csv', na = 'NA')\n\n## =========== 5.4 特殊指令 : file.choose, list.files ===========\n## file.choose : 僅能使用在一般 windows 系統，可以直接點選本機端的檔案物件，R 會辨識檔案位置並回傳\n## list.files  : 列出該資料夾下的檔案，並可限定關鍵字\n\ninFile <- file.choose()\ninFile\n# [1] \"D:\\\\MIS 2015 Working Process\\\\R TrainingLesson\\\\ReferenceData\\\\love_actually.txt\"\n\ninFile <- list.files(path = 'D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/',\n                     pattern = 'txt|csv',\n                     full.names = T)\n# path : 資料夾路徑\n# pattern : 關鍵字 (可使用'|'增加關鍵字)\n# full.names : 回傳完整檔案路徑，default 為 F \n\ninFile\n# [1] \"D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/love_actually.txt\"\n# [2] \"D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/Read.sample.txt\"  \n# [3] \"D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/write.out.txt\"    \n# [4] \"D:/MIS 2015 Working Process/R TrainingLesson/ReferenceData/write.out2.txt\" \n\n## =========== 6. 資料轉換、合併、切割 ===========\n## 資料轉換 : cut, recode 函數\n## 資料合併 : c, union, cbind, rbind\n## 資料切割 : split, subset (文字切割 : strsplit)\n## =========== 6.1 資料轉換 ===========\n# cut 指令\nx = sample(1:100, 20)\nx\n# [1] 83 33 12  2 67 50 21 56 88 28  3 45 63 32 46 75 55 65 91 99\ncut(x, breaks = c(0, 50, max(x)))\n# [1] (50,99] (0,50]  (0,50]  (0,50]  (50,99] (0,50]  (0,50]  (50,99] (50,99] (0,50]  (0,50]  (0,50]  (50,99] (0,50] \n# [15] (0,50]  (50,99] (50,99] (50,99] (50,99] (50,99]\n# Levels: (0,50] (50,99]\n\ncut(x, breaks = c(0, 50, max(x)), labels = c(1, 2))\n# [1] 2 1 1 1 2 1 1 2 2 1 1 1 2 1 1 2 2 2 2 2\n# Levels: 1 2\n\ncut(x, breaks = c(0, 50, max(x)), labels = c('A', 'B'))\n# [1] B A A A B A A B B A A A B A A B B B B B\n# Levels: A B\n\ncut(x, breaks = 2)\n# [1] (50.5,99.1] (1.9,50.5]  (1.9,50.5]  (1.9,50.5]  (50.5,99.1] (1.9,50.5]  (1.9,50.5]  (50.5,99.1] (50.5,99.1]\n# [10] (1.9,50.5]  (1.9,50.5]  (1.9,50.5]  (50.5,99.1] (1.9,50.5]  (1.9,50.5]  (50.5,99.1] (50.5,99.1] (50.5,99.1]\n# [19] (50.5,99.1] (50.5,99.1]\n# Levels: (1.9,50.5] (50.5,99.1]\n\ncut(x, breaks = 2, labels = c('A', 'B'))\n# [1] B A A A B A A B B A A A B A A B B B B B\n# Levels: A B\n\ncut(x, breaks = 2, labels = F)\n# [1] 2 1 1 1 2 1 1 2 2 1 1 1 2 1 1 2 2 2 2 2\n\ncut(c(0,50,100), breaks= c(0, 50))\n# [1] <NA>   (0,50] <NA>  \n# Levels: (0,50]\n\n# recode 指令\nlibrary(car)\nrecode(x, \"0:50 = 'A';else = 'B'\")\n# [1] \"B\" \"A\" \"A\" \"A\" \"B\" \"A\" \"A\" \"B\" \"B\" \"A\" \"A\" \"A\" \"B\" \"A\" \"A\" \"B\" \"B\" \"B\" \"B\" \"B\"\n\nrecode(x, \"0:50 = 1;else = 2\")\n# [1] 2 1 1 1 2 1 1 2 2 1 1 1 2 1 1 2 2 2 2 2\n\nrecode(x, \"0:20 = 1;20:40 = 2;40:60 = 3;60:80 = 4;else = 5\")\n# [1] 5 2 1 1 4 3 2 3 5 2 1 3 4 2 3 4 3 4 5 5\n\n## =========== 6.2 資料合併 ===========\n## =========== 6.3 資料切割 ===========\n",
    "created" : 1452771652976.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "4|40|11|31|\n",
    "hash" : "640713192",
    "id" : "1445790F",
    "lastKnownWriteTime" : 1452771686,
    "path" : "~/R_Code/Lesson20160114/R TrainingLesson.R",
    "project_path" : "R TrainingLesson.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}